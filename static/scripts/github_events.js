// Generated by CoffeeScript 1.5.0
var GitPush, callback, draw, fix_api_url, get_data, initialize, parse_data;

GitPush = (function() {

  function GitPush(data) {
    this.data = data;
    this.created = this.data.created_at;
    this.repo_url = this.data.repo.url;
    this.repo_name = this.data.repo.name;
    this.commits = this.parse_commits(this.data.payload.commits);
  }

  GitPush.prototype.parse_commits = function(commits) {
    var commit, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = commits.length; _i < _len; _i++) {
      commit = commits[_i];
      _results.push({
        "message": commit.message,
        "url": commit.url
      });
    }
    return _results;
  };

  GitPush.prototype.to_html = function() {
    var commit, commits, div;
    commits = (function() {
      var _i, _len, _ref, _results;
      _ref = this.commits;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        commit = _ref[_i];
        _results.push("<pre>" + commit.message + "</pre>\n<a href = \"" + (fix_api_url(commit.url)) + "\" class = \"commit-link\">view</a>");
      }
      return _results;
    }).call(this);
    div = document.createElement("div");
    div.setAttribute("class", "github-event");
    div.innerHTML = "<a href = \"" + (fix_api_url(this.repo_url)) + "\"><h2>" + this.repo_name + "</h2></a>\n" + commits;
    return div;
  };

  return GitPush;

})();

fix_api_url = function(url) {
  return url.replace("https://api.github.com/repos", "https://github.com");
};

parse_data = function(data) {
  var event_data, event_type, event_types, _i, _len, _results;
  event_types = {
    PushEvent: GitPush
  };
  _results = [];
  for (_i = 0, _len = data.length; _i < _len; _i++) {
    event_data = data[_i];
    if (event_type = event_types[event_data.type]) {
      _results.push(new event_type(event_data));
    } else {
      _results.push(void 0);
    }
  }
  return _results;
};

callback = function(data) {
  var meta, response;
  response = data["data"];
  meta = data["meta"];
  return draw(parse_data(response));
};

draw = function(events) {
  var container, event, _i, _len;
  container = document.getElementById("github-feed");
  for (_i = 0, _len = events.length; _i < _len; _i++) {
    event = events[_i];
    if (!event) {
      continue;
    }
    container.appendChild(event.to_html());
  }
  return container.style.display = "block";
};

get_data = function() {
  var container, script, username;
  container = document.getElementById("github-feed");
  username = container.getAttribute("github-username");
  script = document.createElement('script');
  script.src = "https://api.github.com/users/" + username + "/events?callback=callback";
  return document.getElementsByTagName('head')[0].appendChild(script);
};

initialize = function() {
  var old_onload;
  old_onload = window.onload;
  return window.onload = function() {
    var style;
    get_data();
    style = document.createElement("link");
    style.setAttribute("rel", "stylesheet");
    style.setAttribute("type", "text/css");
    style.setAttribute("href", "/static/style/github_events.css");
    return document.getElementsByTagName('head')[0].appendChild(style);
  };
};

initialize();
